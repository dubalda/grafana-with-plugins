import { Pod } from "./pod";
import { BaseModel } from '../../common/types/traits/baseModel';
export declare class Node extends BaseModel {
    hideNs: boolean;
    namespaces: Array<{
        name: string;
        limit: number | boolean;
        pods: Array<Pod>;
        sort: string;
    }>;
    metrics: {
        cpuRequested: number | string;
        memoryRequested: number | string;
        cpuUsed: number | string;
        memoryUsed: number | string;
        podsCount: number | string;
    };
    cpuIndicate: boolean;
    memoryIndicate: boolean;
    podsIndicate: boolean;
    cpuRequestedIndicate: boolean;
    memoryRequestedIndicate: boolean;
    podsRequestedIndicate: boolean;
    constructor(data: any);
    toggle(): void;
    nsListState(): any;
    status: number;
    color: string;
    message: string;
    cpuStatus: number;
    cpuStatusRequested: number;
    memoryStatus: number;
    memoryStatusRequested: number;
    podsStatus: number;
    podsStatusRequested: number;
    hostIp: any;
    memoryCapacityFormatted: any;
    memoryAllocatableFormatted: any;
    cpuAllocatableFormatted: any;
    memoryUsedFormatted: string;
    memoryRequestedFormatted: string;
    cpuUsedFormatted: string;
    cpuRequestedFormatted: string;
    podsUsedFormatted: string;
    podsRequestedFormatted: string;
    cpuPercentUsed: string;
    memoryPercentUsed: string;
    podsPercentUsed: string;
    rowCpuColor: string;
    rowCpuRequestedColor: string;
    rowMemoryColor: string;
    rowMemoryRequestedColor: string;
    rowPodsColor: string;
    rowPodsRequestedColor: string;
    parseMetrics(cpuReq: any, memoryReq: any, pods: any, cpuUsed: any, memoryUsed: any): void;
    setCpuMetricIndicated(requested?: boolean): void;
    setMemoryMetricIndicated(requested?: boolean): void;
    setPodsMetricIndicated(requested?: boolean): void;
    __getLastMetricByInstance(metrics: any): any;
    __getLastMetric(metrics: any): any;
    __getBytes(str: string): number;
    __parseInt(str: string): number;
    __getStatus(used: any, allocatable: any): number;
    __getStatusRequested(requested: any, allocatable: any): number;
    __getColor(status: any): string;
}
